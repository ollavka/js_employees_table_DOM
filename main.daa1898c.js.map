{"version":3,"sources":["scripts/modules/table/sortTable.js","scripts/modules/table/selectTableRow.js","scripts/modules/table/handleTableEvents.js","scripts/utils/capitalizeWord.js","scripts/utils/salaryParser.js","scripts/utils/index.js","scripts/modules/table/editTableData.js","scripts/modules/table/index.js","scripts/modules/form/createNewEmployeeForm.js","scripts/modules/notification/pushNotification.js","scripts/modules/notification/getErrors.js","scripts/modules/notification/index.js","scripts/modules/form/addNewEmployee.js","scripts/modules/form/index.js","scripts/main.js"],"names":["tableHead","document","querySelector","firstElementChild","tableBody","isDescOrder","currentSortFieldIdx","setSortOrder","newSortFieldIdx","getParsedData","firstData","secondData","parseFloat","replace","getSortedRows","rows","sortIndex","sortedRows","sort","row1","row2","firstRow","secondRow","children","textContent","firstParsedData","secondParsedData","localeCompare","getSortedRowsByField","sortField","tableTitles","tableTitleIdx","map","th","indexOf","tableRows","sortedTableRows","sortTable","event","targetItem","target","closest","tableTitle","append","module","exports","selectedRow","selectTableRow","tableRow","currentTarget","contains","classList","remove","add","require","handleTableEvents","capitalizeWord","word","firstLetter","toUpperCase","restWord","slice","salaryParser","salary","Intl","NumberFormat","style","currency","format","getInputType","data","isNumber","Number","isNaN","saveChanges","tableData","prevValue","valueToChange","newValue","startsWith","newSalary","onBlur","value","onKeyPress","addEventListener","key","replaceDataToInput","input","createElement","inputType","className","type","innerHTML","appendChild","focus","once","editTableData","preventDefault","formData","name","tagName","options","createFieldContent","fieldContent","setAttribute","option","newOption","createFormField","formField","createSubmitButton","submitButton","createNewEmployeeForm","domElement","form","pushNotification","posTop","posRight","title","description","body","notifElem","notifTitle","notifDescription","top","right","innerText","setTimeout","getErrors","errors","isSomeEmptyField","Object","values","some","push","wrongName","length","wrongAge","age","createNewEmployee","entries","addNewEmployee","table","fromEntries","FormData","newEmployee","reset","index"],"mappings":"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","file":"main.daa1898c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead').firstElementChild;\nconst tableBody = document.querySelector('tbody');\n\nlet isDescOrder = false;\nlet currentSortFieldIdx = null;\n\nconst setSortOrder = (newSortFieldIdx) => {\n  if (currentSortFieldIdx !== null && currentSortFieldIdx === newSortFieldIdx) {\n    isDescOrder = !isDescOrder;\n  } else {\n    isDescOrder = false;\n    currentSortFieldIdx = newSortFieldIdx;\n  }\n};\n\nconst getParsedData = (firstData, secondData) => {\n  const firstParsedData = parseFloat(firstData.replace(/[^\\d.-]/g, ''));\n  const secondParsedData = parseFloat(secondData.replace(/[^\\d.-]/g, ''));\n\n  return [firstParsedData, secondParsedData];\n};\n\nconst getSortedRows = (rows, sortIndex) => {\n  const sortedRows = [...rows].sort((row1, row2) => {\n    const firstRow = isDescOrder ? row2 : row1;\n    const secondRow = isDescOrder ? row1 : row2;\n\n    const firstData = firstRow.children[sortIndex].textContent;\n    const secondData = secondRow.children[sortIndex].textContent;\n\n    const [\n      firstParsedData,\n      secondParsedData,\n    ] = getParsedData(firstData, secondData);\n\n    if (firstParsedData && secondParsedData) {\n      return firstParsedData - secondParsedData;\n    }\n\n    return firstData.localeCompare(secondData);\n  });\n\n  return sortedRows;\n};\n\nconst getSortedRowsByField = (sortField) => {\n  const tableTitles = [...tableHead.children].map(th => (\n    th.textContent\n  ));\n\n  const tableTitleIdx = tableTitles.indexOf(sortField);\n\n  if (tableTitleIdx < 0) {\n    return;\n  }\n\n  setSortOrder(tableTitleIdx);\n\n  const tableRows = [...tableBody.rows];\n\n  const sortedTableRows = getSortedRows(tableRows, tableTitleIdx);\n\n  return sortedTableRows;\n};\n\n/* eslint-disable-next-line no-shadow */\nconst sortTable = (event) => {\n  const targetItem = event.target;\n  const isHeader = !!targetItem.closest('thead');\n\n  if (!isHeader) {\n    return;\n  }\n\n  const tableTitle = targetItem.textContent;\n\n  const sortedRows = getSortedRowsByField(tableTitle);\n\n  if (!sortedRows) {\n    return;\n  }\n\n  tableBody.append(...sortedRows);\n};\n\nmodule.exports = { sortTable };\n","'use strict';\n\nlet selectedRow = null;\n\n/* eslint-disable-next-line no-shadow */\nconst selectTableRow = (event) => {\n  const tableRow = event.target.closest('tr');\n\n  const table = event.currentTarget;\n  const tableBody = table.querySelector('tbody');\n\n  if (!tableRow || !tableBody.contains(tableRow)) {\n    return;\n  }\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  tableRow.classList.add('active');\n  selectedRow = tableRow;\n};\n\nmodule.exports = { selectTableRow };\n","'use strict';\n\nconst { sortTable } = require('./sortTable');\nconst { selectTableRow } = require('./selectTableRow');\n\n/* eslint-disable-next-line no-shadow */\nconst handleTableEvents = (event) => {\n  sortTable(event);\n  selectTableRow(event);\n};\n\nmodule.exports = { handleTableEvents };\n","'use strict';\n\nconst capitalizeWord = (word) => {\n  const firstLetter = word[0].toUpperCase();\n  const restWord = word.slice(1);\n\n  return `${firstLetter}${restWord}`;\n};\n\nmodule.exports = { capitalizeWord };\n","'use strict';\n\nconst salaryParser = (salary) => {\n  if (typeof salary === 'number') {\n    const formattedSalary = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    })\n      .format(salary)\n      .replace('.00', '');\n\n    return formattedSalary;\n  }\n\n  return parseFloat(salary.replace(/[^\\d.-]/g, ''));\n};\n\nmodule.exports = { salaryParser };\n","'use strict';\n\nconst { capitalizeWord } = require('./capitalizeWord');\nconst { salaryParser } = require('./salaryParser');\n\nmodule.exports = {\n  capitalizeWord,\n  salaryParser,\n};\n","'use strict';\n\n/* eslint-disable no-shadow */\nconst { salaryParser } = require('../../utils');\n\nconst getInputType = (data) => {\n  const isNumber = !Number.isNaN(salaryParser(data)) || !Number.isNaN(+data);\n\n  return isNumber ? 'number' : 'text';\n};\n\nconst saveChanges = (tableData, prevValue, valueToChange) => {\n  const newValue = valueToChange || prevValue;\n\n  if (prevValue.startsWith('$')) {\n    const newSalary = salaryParser(+newValue);\n\n    if (newSalary.slice(1) === 'NaN') {\n      tableData.textContent = prevValue;\n\n      return;\n    }\n\n    tableData.textContent = salaryParser(+newValue);\n\n    return;\n  }\n\n  tableData.textContent = newValue;\n};\n\nconst onBlur = (event, tableData, prevValue) => {\n  saveChanges(tableData, prevValue, event.target.value);\n};\n\nconst onKeyPress = (tableData, prevValue) => {\n  tableData.addEventListener(\n    'keydown',\n    (event) => {\n      if (event.key === 'Enter') {\n        saveChanges(tableData, prevValue, event.target.value);\n      }\n\n      if (event.key === 'Escape') {\n        tableData.textContent = prevValue;\n      }\n    },\n  );\n};\n\nconst replaceDataToInput = (tableData) => {\n  const value = tableData.textContent;\n\n  const input = document.createElement('input');\n  const inputType = getInputType(value);\n\n  input.className = 'cell-input';\n  input.type = inputType;\n  input.value = salaryParser(value) || value;\n\n  tableData.innerHTML = '';\n\n  tableData.appendChild(input);\n  input.focus();\n\n  input.addEventListener(\n    'blur',\n    (event) => onBlur(event, tableData, value),\n    { once: true }\n  );\n};\n\nconst editTableData = (event) => {\n  event.preventDefault();\n\n  const targetItem = event.target;\n  const table = event.currentTarget;\n  const tableBody = table.querySelector('tbody');\n\n  const tableData = targetItem.closest('td');\n\n  if (!tableData || !tableBody.contains(tableData)) {\n    return;\n  }\n\n  const prevValue = tableData.textContent;\n\n  const dataInput = tableData.querySelector('.cell-input');\n\n  if (!dataInput) {\n    replaceDataToInput(tableData);\n  }\n\n  onKeyPress(tableData, prevValue);\n};\n\nmodule.exports = { editTableData };\n","'use strict';\n\nconst { handleTableEvents } = require('./handleTableEvents');\nconst { editTableData } = require('./editTableData');\n\nmodule.exports = {\n  handleTableEvents,\n  editTableData,\n};\n","'use strict';\n\nconst { capitalizeWord } = require('../../utils/');\n\nconst formData = [\n  {\n    name: 'name',\n    type: 'text',\n    tagName: 'input',\n  },\n  {\n    name: 'position',\n    type: 'text',\n    tagName: 'input',\n  },\n  {\n    name: 'office',\n    tagName: 'select',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  {\n    name: 'age',\n    type: 'number',\n    tagName: 'input',\n  },\n  {\n    name: 'salary',\n    type: 'number',\n    tagName: 'input',\n  },\n];\n\nconst createFieldContent = (data) => {\n  /* eslint-disable-next-line no-shadow */\n  const { name, type, tagName, options } = data;\n\n  const fieldContent = document.createElement(tagName);\n\n  fieldContent.setAttribute('data-qa', name);\n  fieldContent.name = name;\n\n  if (tagName === 'input') {\n    fieldContent.type = type;\n  } else {\n    for (const option of options) {\n      const newOption = document.createElement('option');\n\n      newOption.value = option;\n      newOption.textContent = option;\n\n      fieldContent.appendChild(newOption);\n    }\n  }\n\n  return fieldContent;\n};\n\nconst createFormField = (data) => {\n  const formField = document.createElement('label');\n\n  formField.textContent = `${capitalizeWord(data.name)}:`;\n\n  const fieldContent = createFieldContent(data);\n\n  formField.appendChild(fieldContent);\n\n  return formField;\n};\n\nconst createSubmitButton = () => {\n  const submitButton = document.createElement('button');\n\n  submitButton.textContent = 'Save to table';\n  submitButton.type = 'submit';\n\n  return submitButton;\n};\n\nconst createNewEmployeeForm = (domElement) => {\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n\n  for (const data of formData) {\n    const formField = createFormField(data);\n\n    form.appendChild(formField);\n  }\n\n  const submitButton = createSubmitButton();\n\n  form.appendChild(submitButton);\n\n  domElement.appendChild(form);\n\n  return form;\n};\n\nmodule.exports = { createNewEmployeeForm };\n","'use strict';\n\nconst pushNotification = (\n  posTop = 10,\n  posRight = 10,\n  title,\n  description,\n  type = 'error',\n) => {\n  const body = document.body;\n\n  const notifElem = document.createElement('div');\n  const notifTitle = document.createElement('h2');\n  const notifDescription = document.createElement('p');\n\n  notifElem.classList.add('notification', type);\n\n  notifElem.style.top = typeof posTop === 'number'\n    ? `${posTop}px`\n    : posTop;\n\n  notifElem.style.right = typeof posRight === 'number'\n    ? `${posRight}px`\n    : posRight;\n\n  notifTitle.className = 'title';\n  notifTitle.innerText = title;\n  notifDescription.innerText = description;\n\n  notifElem.setAttribute('data-qa', 'notification');\n\n  notifElem.append(notifTitle, notifDescription);\n\n  body.appendChild(notifElem);\n\n  setTimeout(() => notifElem.remove(), 2000);\n};\n\nmodule.exports = { pushNotification };\n","'use strict';\n\nconst getErrors = (data) => {\n  const errors = [];\n\n  const isSomeEmptyField = Object.values(data).some(value => !value);\n\n  if (isSomeEmptyField) {\n    errors.push({\n      title: 'All fields are required',\n      description: 'Please fill in all fields of the form',\n    });\n\n    return errors;\n  }\n\n  const wrongName = data.name.length < 4;\n  const wrongAge = data.age < 18 || data.age > 90;\n\n  if (wrongName) {\n    const nameError = {\n      title: 'Wrong name',\n      description: 'The name should have at least 4 characters',\n    };\n\n    errors.push(nameError);\n  }\n\n  if (wrongAge) {\n    const ageError = {\n      title: 'Wrong age',\n      description: 'The age should be between 18 and 90 years old',\n    };\n\n    errors.push(ageError);\n  }\n\n  return errors;\n};\n\nmodule.exports = { getErrors };\n","'use strict';\n\nconst { pushNotification } = require('./pushNotification');\nconst { getErrors } = require('./getErrors');\n\nmodule.exports = {\n  pushNotification,\n  getErrors,\n};\n","'use strict';\n\nconst { salaryParser } = require('../../utils');\nconst { pushNotification, getErrors } = require('../notification');\n\nconst createNewEmployee = (formData) => {\n  const tableRow = document.createElement('tr');\n\n  for (const [key, value] of Object.entries(formData)) {\n    const tableData = document.createElement('td');\n\n    let data = value;\n\n    if (key === 'salary') {\n      data = salaryParser(+data);\n    }\n\n    tableData.textContent = data;\n\n    tableRow.appendChild(tableData);\n  }\n\n  return tableRow;\n};\n\n/* eslint-disable-next-line no-shadow */\nconst addNewEmployee = (event, table) => {\n  event.preventDefault();\n\n  const form = event.target;\n\n  const tableBody = table.querySelector('tbody');\n  const formData = Object.fromEntries(new FormData(form));\n\n  const errors = getErrors(formData);\n\n  if (errors.length === 0) {\n    const newEmployee = createNewEmployee(formData);\n\n    tableBody.appendChild(newEmployee);\n\n    /* eslint-disable-next-line max-len */\n    pushNotification(10, 10, 'Succes', 'New employee was successfuly created', 'success');\n\n    form.reset();\n\n    return;\n  }\n\n  for (const [index, { title, description }] of errors.entries()) {\n    /* eslint-disable-next-line max-len */\n    pushNotification(10 + (index * 150), 10, title, description, 'error');\n  }\n};\n\nmodule.exports = { addNewEmployee };\n","'use strict';\n\nconst { createNewEmployeeForm } = require('./createNewEmployeeForm');\nconst { addNewEmployee } = require('./addNewEmployee');\n\nmodule.exports = {\n  createNewEmployeeForm,\n  addNewEmployee,\n};\n","'use strict';\n\n/* eslint-disable no-shadow */\n\nconst { handleTableEvents, editTableData } = require('./modules/table');\nconst { createNewEmployeeForm, addNewEmployee } = require('./modules/form');\n\nconst body = document.body;\nconst table = document.querySelector('table');\nconst form = createNewEmployeeForm(body);\n\ntable.addEventListener('click', handleTableEvents);\ntable.addEventListener('dblclick', editTableData);\n\nform.addEventListener('submit', (event) => addNewEmployee(event, table));\n"]}